rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isGroupMember(groupId) {
      return request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.memberUids;
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    match /groups/{groupId} {
      allow read, delete: if isGroupMember(groupId);

      allow create: if request.auth != null &&
                     request.auth.uid in request.resource.data.memberUids;

      allow update: if isGroupMember(groupId) || (
        request.auth.uid in request.resource.data.memberUids &&
        !(request.auth.uid in resource.data.memberUids) &&
        resource.data.memberUids.keys().toSet().subsetOf(request.resource.data.memberUids.keys().toSet()) &&
        request.resource.data.memberUids.size() == resource.data.memberUids.size() + 1
      );
    }
  }
}
